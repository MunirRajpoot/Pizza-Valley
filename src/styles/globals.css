@tailwind base;
@tailwind components;
@tailwind utilities;

/* globals.css */
:root {
  --background: #ffffff; /* Light theme background */
  --foreground: #000000; /* Light theme foreground */
  --opacity-value: 0.5;
}

.dark {
  --background: #000000; /* Dark theme background */
  --foreground: #ffffff; /* Dark theme foreground */
}

body {
  background-color: var(--background);
  color: var(--foreground);
  transition: background-color 0.3s, color 0.3s;
}
.border-gradient {
  position: relative;
}
.border-gradient ::before {
  position: absolute;
  content: "";
  inset: 0;
  border-radius: 8px;
  pointer-events: none;
  padding: 2px;
  background: linear-gradient(45deg, #c2410c, #fb923c, #f97316);
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
}
.box {
  /* Required properties */
  position: relative;
  /* Use  your own styles here */
  margin: 25px;
  width: fit-content;
  height: fit-content;
}
.box:before {
  content: "";
  z-index: -1;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: linear-gradient(45deg, #c2410c, #fb923c, #f97316);
  transform: translate3d(0px, 30px, 10px) scale(0.75);
  filter: blur(50px);
  opacity: var(--opacity-value);
  transition: opacity 0.3s ease-in-out;
  border-radius: inherit;
}
.box:hover::before {
  transform: translate3d(0px, 30px, 0) scale(0.9);
  transition: opacity 0.3s ease-in-out;
}
/* 
* Prevents issues when the parent creates a 
* stacking context. (For example, using the transform
* property )
*/
.box::after {
  content: "";
  z-index: -1;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: inherit;
  border-radius: inherit;
}
.short_description{

  overflow: hidden;
  min-height: 50px;
  display: -webkit-box;
  --webkit-box-orient:vertical;
  -webkit-line-clamp:2 ;
  white-space: pre-wrap;
}

@layer utilities {
  .text-balance{
    text-wrap: balance;
  }
}